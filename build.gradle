plugins {
    id 'org.springframework.boot' version '3.4.2' apply false
    id 'io.spring.dependency-management' version '1.1.7' apply false
    id 'org.jetbrains.kotlin.jvm' version '1.9.25' apply false
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25' apply false
    id 'com.google.cloud.tools.jib' version '3.4.2' apply false
}

subprojects {
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'org.jetbrains.kotlin.plugin.spring'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }

    repositories {
        mavenCentral()
    }

    group = 'org.bk'
    version = '0.0.2-SNAPSHOT'
    sourceCompatibility = '21'
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.jetbrains.kotlin:kotlin-reflect'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation("org.mockito.kotlin:mockito-kotlin:5.4.0")
        testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

        testImplementation 'io.projectreactor:reactor-test'
    }

    tasks.named('test') {
        useJUnitPlatform()
    }


    kotlin {
        compilerOptions {
            freeCompilerArgs.addAll '-Xjsr305=strict'
        }
    }
}
configure([project(':sample-caller'), project(':sample-producer')]) {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'com.google.cloud.tools.jib'

    dependencies {
        implementation(project(":common"))
        implementation('org.springframework.boot:spring-boot-starter-actuator')
        implementation('io.micrometer:micrometer-tracing-bridge-otel')
        runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    }

    bootRun {
        args = ["--spring.profiles.active=local"]
    }
    jib {
        from {
            image = 'cgr.dev/chainguard/jre:latest'
        }
    }
}


configure([project(':common')]) {
    apply plugin: 'java-library'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'org.jetbrains.kotlin.plugin.spring'
    group = 'org.bk'
    version = '0.0.2-SNAPSHOT'

    dependencies {
        api("org.springframework.boot:spring-boot-starter-webflux")
        api("com.fasterxml.jackson.module:jackson-module-kotlin")
        api("io.projectreactor.kotlin:reactor-kotlin-extensions")
        api("org.jetbrains.kotlin:kotlin-reflect")
        implementation('com.github.ben-manes.caffeine:caffeine:3.1.6')
        testImplementation('org.springframework.boot:spring-boot-starter-test')
        testImplementation("org.mockito.kotlin:mockito-kotlin:5.4.0")
        testImplementation('io.projectreactor:reactor-test')
    }

    dependencyManagement {
        imports {
            mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
        }
    }
}

buildscript {
    ext {
        kotlinVersion = '1.4.31'
        springBootVersion = '2.4.5'
    }
    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
}

plugins {
    id 'org.springframework.boot' version '2.4.5'
    id 'org.jetbrains.kotlin.jvm' version '1.4.31'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.4.31'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'    
    id 'com.google.cloud.tools.jib' version '2.7.1'
}

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}


ext {
    springCloudVersion = '2020.0.2'
}

group = 'org.bk.samples'
version = '0.0.4-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11



compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('org.springframework.boot:spring-boot-starter-webflux')
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
    implementation("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    implementation("io.micrometer:micrometer-registry-prometheus")

    implementation("org.springframework.cloud:spring-cloud-sleuth-zipkin")

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: "junit", module: "junit"
    }
    testImplementation('io.projectreactor:reactor-test')
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testImplementation("org.junit.jupiter:junit-jupiter-params")
    testRuntime("org.junit.jupiter:junit-jupiter-engine")
    testImplementation("org.mockito:mockito-junit-jupiter")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

//for minikube environment
//docker {
//    url = 'https://192.168.99.100:2376'
//    certPath = new File(System.properties['user.home'], '/.minikube/certs')
//}

jib {
    to {
        image = "bijukunjummen/sample-boot-knative-app:${project.version}"
    }
}
